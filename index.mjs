export const procetar=s=>crypto.subtle.digest("SHA-1",new TextEncoder().encode(s)).then(t=>{let e=Array.from(new Uint8Array(t)),n=[e[0],e[1],e[2]],s=[255,255,255],i=e.map(t=>t<128?s:n),$=[];for(let U=0;U<4;U++)$.push(i.slice(4*U,(U+1)*4));let l=$.concat($.slice().reverse()),r=l.map(t=>t.slice().reverse()),c=l.map((t,e)=>t.concat(r[e])),o=c.length,_=c[0].length,a=4*Math.ceil(3*o/4),f=a*_,p=54+f,h=new ArrayBuffer(p),m=new DataView(h),w=0,I=!0;m.setUint8(w++,66),m.setUint8(w++,77),m.setUint32(w,p,I),w+=4,m.setUint32(w,0,I),w+=4,m.setUint32(w,54,I),w+=4,m.setUint32(w,40,I),w+=4,m.setInt32(w,o,I),w+=4,m.setInt32(w,_,I),w+=4,m.setUint16(w,1,I),w+=2,m.setUint16(w,24,I),w+=2,m.setUint32(w,0,I),w+=4,m.setUint32(w,f,I),w+=4,m.setInt32(w,0,I),w+=4,m.setInt32(w,0,I),w+=4,m.setUint32(w,0,I),w+=4,m.setUint32(w,0,I),w+=4;for(let g=_-1;g>=0;g--){for(let u=0;u<o;u++){let[d,v,x]=c[g][u];m.setUint8(w++,d),m.setUint8(w++,v),m.setUint8(w++,x)}for(let b=0;b<a-3*o;b++)m.setUint8(w++,0)}return h});
